name: Deploy to Vercel

# This workflow is triggered by a repository_dispatch event from your MERN dashboard
on:
  repository_dispatch:
    types: [deploy-triggered]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository's code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install the Vercel CLI globally
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Step 3: Install project dependencies (e.g., React, Vite)
      - name: Install Dependencies
        run: npm install

      # Step 4: Build the project for production
      - name: Build Project
        run: npm run build

      # Step 5: Deploy the project to Vercel
      # This is the final corrected command for PERSONAL Vercel accounts.
      # The `--scope` flag is removed as it causes errors when deploying to a personal account.
      # The Vercel CLI will automatically use the scope defined in the committed .vercel/project.json file.
      - name: Deploy to Vercel
        id: vercel_deploy
        run: |
          DEPLOY_URL=$(vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} --yes)
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV
        
      # Step 6 (Callback on Success): Report the successful deployment back to your dashboard
      - name: Report Success to Dashboard
        if: success()
        run: |
          curl -X POST ${{ secrets.CALLBACK_URL }} \
          -H "Content-Type: application/json" \
          -d '{
            "deploymentId": "${{ github.event.client_payload.deployment_id }}",
            "status": "success",
            "liveUrl": "${{ env.DEPLOY_URL }}",
            "secret": "${{ secrets.CALLBACK_SECRET }}"
          }'

      # Step 7 (Callback on Failure): Report the failed deployment back to your dashboard
      - name: Report Failure to Dashboard
        if: failure()
        run: |
          curl -X POST ${{ secrets.CALLBACK_URL }} \
          -H "Content-Type: application/json" \
          -d '{
            "deploymentId": "${{ github.event.client_payload.deployment_id }}",
            "status": "failed",
            "liveUrl": "",
            "secret": "${{ secrets.CALLBACK_SECRET }}"
          }'
